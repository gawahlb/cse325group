@page "/employees"
@inject EmployeeService EmployeeService
@inject NavigationManager NavigationManager
@using InventoryManagement.Models
@using InventoryManagement.Services
@inject TempDataService TempData;
@rendermode InteractiveServer
@using Microsoft.AspNetCore.Authorization
@attribute [Authorize(Roles = "Manager,Employee")]

<h3>Employees List</h3>

@if (!string.IsNullOrEmpty(tempMessage))
{
    <p class="alert alert-success">@tempMessage</p>
}


<table class="table">
    <thead>
        <tr>
            <th>Employee ID</th>
            <th>First Name</th>
            <th>Last Name</th>
            <th>Position</th>
            <th>Joined Date</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var employee in employees)
        {
            <tr>
                <td>@employee.EmployeeID</td>
                <td>@employee.FirstName</td>
                <td>@employee.LastName</td>
                <td>@employee.Position</td>
                <td>@employee.CreatedDate</td>
                <td class="manageButton"><a href="/employees/edit/@employee.EmployeeID">Edit</a></td>
            </tr>

        }
    </tbody>
</table>
<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-plus-square-fill"
    viewBox="0 0 16 16">
    <path
        d="M2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2zm6.5 4.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3a.5.5 0 0 1 1 0" />
</svg>
<button class="btn btn-link"><a href="/employees/create">Add new Employee</a></button>

@code {
    public string? tempMessage;

    void createpage()
    {
        NavigationManager.NavigateTo($"/employees/create");
    }
    List<Employee> employees = new List<Employee>();

    protected override async Task OnInitializedAsync()
    {
        tempMessage = TempData.GetTempData();
        employees = await EmployeeService.GetAllEmployees();
    }
}